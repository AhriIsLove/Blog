{"version":3,"file":"static/js/971.0f4429f6.chunk.js","mappings":"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","sources":["api/MainAPI.js","designs/Design_Hamburger.js","designs/Design_DropMenu.js","components/header/HamburgerComponent.js","components/header/HeaderComponent.js","api/CommunityAPI.js","layouts/BasicLayout.js","pages/HobbyPage.js"],"sourcesContent":["import axios from \"axios\";//Terminal : yarn add axios\r\n\r\n// export const API_SERVER_HOST = 'http://localhost:8089';\r\nexport const API_SERVER_HOST = 'http://43.200.181.141:8089';\r\n\r\nexport const prefix = `${API_SERVER_HOST}/blog`;\r\n\r\n//서버에게 목록 요청\r\nexport const getMenu = async () => {\r\n    // axios : ajax와 비슷한 역할\r\n    // get방식 API 요청\r\n    // get방식은 URL로 요청됨\r\n    const res = await axios.get(`${prefix}/menu`);\r\n\r\n    // console.log('getMenus res.data : ' , res.data);\r\n\r\n    return res.data;\r\n    // 반환되는 데이터타입\r\n    // dtoList: [],\r\n    // maxSubMenuCount: 0,\r\n};\r\n\r\n//서버에게 메뉴 요청\r\nexport const getMenuOne = async (id) => {\r\n    const res = await axios.get(`${prefix}/menu/${id}`);\r\n\r\n    // console.log('getMenus res.data : ' , res.data);\r\n\r\n    return res.data;\r\n    // return null;\r\n    // 반환되는 데이터타입\r\n    // dtoList: [],\r\n    // maxSubMenuCount: 0,\r\n};\r\n\r\n//서버에게 메뉴 요청\r\nexport const getSubMenus = async (id) => {\r\n    const res = await axios.get(`${prefix}/submenus/${id}`);\r\n\r\n    // console.log('getMenus res.data : ' , res.data);\r\n\r\n    return res.data;\r\n    // return null;\r\n    // 반환되는 데이터타입\r\n    // dtoList: [],\r\n    // maxSubMenuCount: 0,\r\n};\r\n\r\nexport const getSearch = async (keyword) => {\r\n    console.log(\"keyword : \", keyword);\r\n\r\n    const res = await axios.get(`${prefix}/search/${keyword}`);\r\n\r\n    return res.data;\r\n    // 반환되는 데이터타입\r\n    // dtoList: [],\r\n    // maxSubMenuCount: 0,\r\n};\r\n\r\nexport const getImage = async(filename) => {\r\n    const res = await axios.get(`${prefix}/image/${filename}`);\r\n\r\n    return res.data;\r\n}","// npm install framer-motion\r\n// yarn add framer-motion\r\nimport { motion } from \"framer-motion\";\r\n\r\n{/* ShowHamburgerMenu \r\n    - true : 햄버거 메뉴 열기\r\n    - false : 햄버거 메뉴 닫기 */}\r\nexport const Design_Hamburger = ({ ShowHamburgerMenu }) => {\r\n    return (\r\n        <div>\r\n            <motion.svg\r\n                className=\"w-10 h-10 text-gray-500 cursor-pointer\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\">\r\n                <motion.line\r\n                    x1=\"4\"\r\n                    y1=\"6\"\r\n                    x2=\"20\"\r\n                    y2=\"6\"\r\n                    animate={ShowHamburgerMenu ? { rotate: 45, y: 6 } : { rotate: 0, y: 0 }}\r\n                    transition={{ duration: 0.3 }}\r\n                />\r\n                <motion.line\r\n                    x1=\"4\"\r\n                    y1=\"12\"\r\n                    x2=\"20\"\r\n                    y2=\"12\"\r\n                    animate={ShowHamburgerMenu ? { scale:0 } : { scale:1 }}\r\n                    transition={{ duration: 0.3 }}\r\n                />\r\n                <motion.line\r\n                    x1=\"4\"\r\n                    y1=\"18\"\r\n                    x2=\"20\"\r\n                    y2=\"18\"\r\n                    animate={ShowHamburgerMenu ? { rotate: -45, y: -6 } : { rotate: 0, y: 0 }}\r\n                    transition={{ duration: 0.3 }}\r\n                />\r\n            </motion.svg>\r\n        </div>\r\n    );\r\n};\r\n","import { motion } from \"framer-motion\";\r\n\r\n{/* DropShowHamburgerMenu \r\n    - true : 드랍 메뉴 열기\r\n    - false : 드랍 메뉴 닫기 */}\r\nexport const Design_DropMenu = ({ DropShowHamburgerMenu, id}) => {\r\n    return (\r\n        <div>\r\n            <motion.svg\r\n                className=\"w-10 h-10 p-2 text-myMainColor-900 cursor-pointer\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\">\r\n                <motion.line\r\n                    initial={{ x1:6, y1:6, x2:18, y2:12 }}\r\n                    animate={DropShowHamburgerMenu === id ? { x1:18, y1:6, x2:12, y2:18 } : { x1:6, y1:6, x2:18, y2:12 }}\r\n                    transition={{ duration: 0.3 }}\r\n                />\r\n                <motion.line\r\n                    initial={{ x1:6, y1:18, x2:18, y2:12 }}\r\n                    animate={DropShowHamburgerMenu === id ? { x1:6, y1:6, x2:12, y2:18 } : { x1:6, y1:18, x2:18, y2:12 }}\r\n                    transition={{ duration: 0.3 }}\r\n                />\r\n            </motion.svg>\r\n        </div>\r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { Design_Hamburger } from \"../../designs/Design_Hamburger\"\r\nimport { getMenu } from \"../../api/MainAPI\";\r\nimport { Design_DropMenu } from \"../../designs/Design_DropMenu\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//API : MenuDTO\r\nconst initMenuDTO = {\r\n    dtoList: [],\r\n    maxSubMenuCount: 0,\r\n};\r\n\r\nconst HamburgerComponent = () => {\r\n    //API : 메뉴\r\n    const [menuDTO, setMenuDTO] = useState(initMenuDTO);\r\n    useEffect(() => {\r\n        getMenu().then(data => {\r\n            setMenuDTO(data);\r\n        });\r\n    }, []);\r\n\r\n    //햄버거메뉴 여부\r\n    const [ShowHamburgerMenu, setShowHamburgerMenu] = useState(false);\r\n    const showHamburgerMenu = () => {\r\n        if (ShowHamburgerMenu) {\r\n            setShowHamburgerMenu(false);\r\n        }\r\n        else {\r\n            setShowHamburgerMenu(true);\r\n        }\r\n    };\r\n    //햄버거메뉴 상세메뉴 여부\r\n    const [DropShowHamburgerMenu, setDropShowHamburgerMenu] = useState(-1);\r\n    const showDropHamburgerMenu = (index) => {\r\n        if (DropShowHamburgerMenu === index) {\r\n            setDropShowHamburgerMenu(-1);\r\n        }\r\n        else {\r\n            setDropShowHamburgerMenu(index);\r\n        }\r\n    };\r\n    //항상\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            //md:햄버거메뉴 닫기\r\n            if (window.innerWidth >= 640) {\r\n                setShowHamburgerMenu(false);\r\n            }\r\n        };\r\n        //이벤트 등록\r\n        window.addEventListener(\"resize\", handleResize);\r\n        //이벤트 실행\r\n        handleResize();\r\n        //이벤트 등록 해제\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"ml-auto\">\r\n            <div className={`fixed left-1/4 top-0 w-3/4 h-screen p-10 bg-myMainColor-300 opacity-90 \r\n            transition-all duration-500 ease-in-out transform origin-right \r\n            ${ShowHamburgerMenu ? \"opacity-100 scale-x-100\" : \"opacity-0 scale-x-0\"} \r\n            flex-row items-center`}>\r\n                {menuDTO.dtoList.map(menu =>\r\n                    <div className='h-auto w-full \r\n                    text-3xl text-myMainColor-950 \r\n                    cursor-pointer \r\n                    flex'\r\n                        onClick={() => showDropHamburgerMenu(menu.id)}\r\n                        key={menu.id}>\r\n                        <Design_DropMenu DropShowHamburgerMenu={DropShowHamburgerMenu} id={menu.id}></Design_DropMenu>\r\n                        <div className=\"w-full\">\r\n                            <div className=\"bg-myMainColor-400 bg-opacity-0 w-full rounded-md\r\n                            transition-all duration-300 hover:bg-opacity-80\">\r\n                                {menu.name}\r\n                            </div>\r\n                            {/* 상세메뉴 */}\r\n                            <div className={`ml-5\r\n                            text-xl text-myMainColor-950 \r\n                            transition-all duration-300 ease-in-out transform origin-top\r\n                            ${DropShowHamburgerMenu === menu.id ? \"opacity-100 scale-y-100 max-h-full\" : \"opacity-0 scale-y-0 max-h-0\"} \r\n                            overflow-hidden`}>\r\n                                {menu.sub_menus.map(sub_menu =>\r\n                                    <div className=\"\r\n                                    bg-myMainColor-400 bg-opacity-0 rounded-md w-full\r\n                                        hover:bg-opacity-80 transition-all duration-300\"\r\n                                        key={sub_menu.id}>\r\n                                        {/* e.stopPropagation() : 버블링 방지(부모의 onClick방지) */}\r\n                                        <Link className=\"flex w-full\" \r\n                                        to={`${menu.link}${sub_menu.link}`} onClick={(e) => {e.stopPropagation(); showHamburgerMenu();}}>{sub_menu.name}</Link>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"relative md:hidden \"\r\n                onClick={showHamburgerMenu}>\r\n                <Design_Hamburger ShowHamburgerMenu={ShowHamburgerMenu}></Design_Hamburger>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HamburgerComponent;","// import { Link } from 'react-router-dom';\r\nimport '../../index.css';\r\nimport '../../App.css';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\n// 이미지\r\nimport logo from '../../images/logo.png';//로고\r\n// 디자인\r\nimport HamburgerComponent from './HamburgerComponent';\r\nimport { getMenu } from '../../api/MainAPI';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//API : MenuDTO\r\nconst initMenuDTO = {\r\n    dtoList: [],\r\n    maxSubMenuCount: 0,\r\n};\r\n\r\n// 헤더\r\nconst HeaderComponent = () => {\r\n    //API : 메뉴\r\n    const [menuDTO, setMenuDTO] = useState(initMenuDTO);\r\n    useEffect(() => {\r\n        getMenu().then(data => {\r\n            // console.log(data);\r\n            setMenuDTO(data);\r\n        });\r\n    }, []);\r\n\r\n    //상세메뉴 여부\r\n    const [ShowDropMenu, setShowDropMenu] = useState(false);\r\n    const showDropMenu = () => {\r\n        setShowDropMenu(true);\r\n    };\r\n    const hideDropMenu = () => {\r\n        setShowDropMenu(false);\r\n    };\r\n\r\n    return (\r\n        <div className='h-16 md:h-20 lg:h-24\r\n        flex flex-row items-center'>\r\n            {/* 로고 */}\r\n            {/* object-contain : 이미지 잘림 없이 채우기 */}\r\n            <Link to='/' className='h-16 md:h-20 lg:h-24 w-auto\r\n            object-contain \r\n            flex '>\r\n                <img alt='logo' src={logo} />\r\n            </Link>\r\n\r\n            {/* 메뉴 */}\r\n            <nav className='h-full w-full ml-auto md:gap-6 lg:gap-9 \r\n            cursor-default \r\n            flex items-center justify-center'>\r\n                {/* 드랍메뉴 배경 */}\r\n                {/* \r\n                origin-top : scale-y가 0에서 100으로 변경시 기준을 top으로 잡아 아래로만 늘어나도록 함 \r\n                scale-y-0 : 현재 객체의 y크기 0%\r\n                scale-y-100 : 현재 객체의 y크기 100%\r\n                */}\r\n                <div className={`dropMenuContent fixed left-0 top-16 md:top-20 lg:top-24 w-screen h-auto bg-myMainColor-300/50 \r\n                transition-all duration-500 ease-in-out transform origin-top \r\n                ${ShowDropMenu ? \"opacity-100 scale-y-100\" : \"opacity-0 scale-y-0\"}`}\r\n                    onMouseOver={showDropMenu} onMouseOut={hideDropMenu}>\r\n                    {(() => {\r\n                        // 이렇게 for문 사용 가능!\r\n                        const elements = [];\r\n                        for (let i = 0; i < menuDTO.maxSubMenuCount; i++) {\r\n                            elements.push(<br key={i} />);\r\n                        }\r\n                        return elements;\r\n                    })()}\r\n                </div>\r\n                {/* \r\n                group : group-hover 제어용\r\n                - 자식태그가 group-hover사용 가능하게 함\r\n                - group-hover:w-full : hover시 w-full 적용 */}\r\n                <div className='menuContent' /> {/* 공백 */}\r\n\r\n                {/* 메뉴 */}\r\n                {menuDTO.dtoList.map(menu =>\r\n                    <div className='menuContent group'\r\n                        key={menu.id}\r\n                        onMouseOver={showDropMenu} onMouseOut={hideDropMenu}>\r\n                        {menu.name}\r\n                        {/* \r\n                        transition-all : 모든 속성에 대해 transition 적용\r\n                        duration-300 : \t300ms 동안 애니메이션\r\n                        left-0 top-[0%] : 시작 위치(-20% 안보임)\r\n                        w-[100%] h-[5px] : 라인 크기\r\n                        group-hover:top-[100%] : 끝 위치(120% 안보임) */}\r\n                        <span className='absolute left-0 w-[100%] h-[5px] bg-myMainColor-300  \r\n                        duration-300 \r\n                        top-[0%] opacity-0\r\n                        group-hover:top-[95%] group-hover:opacity-100'></span>\r\n                        {/* 상세메뉴 */}\r\n                        <div className={`absolute left-0 top-full w-full h-auto\r\n                        cursor-pointer\r\n                        transition-all duration-500 ease-in-out transform origin-top\r\n                        ${ShowDropMenu ? \"opacity-100 scale-y-100\" : \"opacity-0 scale-y-0\"} \r\n                        flex flex-col items-center justify-center`}>\r\n                            {menu.sub_menus.map(sub_menu =>\r\n                                <Link\r\n                                    className='dropMenuContent rounded-md w-full bg-myMainColor-300 \r\n                                    text-center \r\n                                    transition-all duration-300 \r\n                                    bg-opacity-0 \r\n                                    hover:bg-opacity-80 '\r\n                                    key={sub_menu.id}\r\n                                    to={`${menu.link}${sub_menu.link}`}\r\n                                >\r\n                                    {sub_menu.name}\r\n                                </Link>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <HamburgerComponent></HamburgerComponent>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderComponent;","import axios from \"axios\";//Terminal : yarn add axios\r\n\r\n// export const API_SERVER_HOST = 'http://localhost:8089';\r\nexport const API_SERVER_HOST = 'http://43.200.181.141:8089';\r\n\r\nexport const prefix = `${API_SERVER_HOST}/community`;\r\n\r\n//서버에게 목록 요청\r\nexport const postUserLogRegist = async () => {\r\n    // console.log(\"postUserLogRegist 호출됨\");\r\n\r\n    // 사용자 IP 가져오기\r\n    const ipRes = await axios.get('https://api.ipify.org?format=json');\r\n    const ip = ipRes.data.ip;\r\n    const actionDate = new Date().toISOString();\r\n    const res = await axios.post(`${prefix}/userlog/regist`, {\r\n        ip: ip,\r\n        action: \"접속\",\r\n        actionDate: actionDate\r\n    });\r\n\r\n    // console.log('postUserLogRegist res.data : ' , res.data);\r\n\r\n    return res.data;\r\n};","import HeaderComponent from \"../components/header/HeaderComponent\";\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { postUserLogRegist } from \"../api/CommunityAPI\";\r\n\r\nconst BasicLayout = ({ children }) => {\r\n    const location = useLocation(); // URL 변경 감지\r\n\r\n    useEffect(() => {\r\n        // location.pathname이 변경될 때마다 이 함수 실행\r\n        const logUserVisit = async () => {\r\n            // console.log(`페이지 방문: ${location.pathname}`);\r\n            // 서버로 로그 전송\r\n            postUserLogRegist().then(data => {\r\n                console.log(data);\r\n            });\r\n        };\r\n        logUserVisit();\r\n    }, [location.pathname]);\r\n\r\n    return (\r\n        <>\r\n            {/* \r\n            1. 화면 전체\r\n            1-1. 상위 항목과의 관계\r\n            1-2. 높이\r\n            1-3. 위치\r\n            1-4. 크기\r\n            1-5. 배경\r\n\r\n            2. 텍스트\r\n\r\n            3. 상호작용\r\n\r\n            4. 애니메이션\r\n\r\n            5. 하위 항목과의 관계\r\n\r\n            */}\r\n\r\n            {/*\r\n            hidden md:flex\r\n            relative h-full items-center justify-center flex-1\r\n            md:text-base lg:text-xl xl:text-3xl font-extrabold text-myMainColor-950  \r\n            */}\r\n\r\n            {/* 헤더 */}\r\n            {/* sticky : 헤더 상단 고정(고정하기위해 위치(top), 크기(w) 고정 필요) */}\r\n            <div className=\"sticky top-0 w-full\r\n            z-10 \r\n            bg-myMainColor-50 \">\r\n                <HeaderComponent></HeaderComponent>\r\n            </div>\r\n\r\n            {/* 메인 */}\r\n            {/* \r\n            min-h : 화면 크기100vh에서 헤더의 크기만큼 뺀 높이를 최소 높이로 설정\r\n            4rem : h-16 \r\n            5rem : md:h-20 \r\n            6rem : lg:h-24\r\n             */}\r\n            <div className=\"flex flex-row flex-1\r\n            min-h-[calc(100vh-4rem)] md:min-h-[calc(100vh-5rem)] lg:min-h-[calc(100vh-6rem)]\">\r\n                {/* 사이드-좌 */}\r\n                <div className=\"w-1/12\">\r\n\r\n                </div>\r\n\r\n                {/* 컨테이너 */}\r\n                {/* min-h-screen : 최소 높이는 화면 높이로 설정하되, 내용이 많아지면 자동으로 늘어나게 함 */}\r\n                <div className=\"relative \r\n                z-0 \r\n                top-0 w-10/12 my-5\r\n                bg-myMainColor-50 \r\n                flex justify-center\">\r\n                    {children}\r\n                </div>\r\n\r\n                {/* 사이드-우 */}\r\n                <div className=\"w-1/12\">\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BasicLayout;","import { Outlet, useNavigate } from \"react-router-dom\";\r\nimport BasicLayout from \"../layouts/BasicLayout\";\r\n\r\nconst HobbyPage = () => {\r\n    //URL을 업데이트하고 기록 스택을 관리\r\n    //페이지 이동을 하기 위한 변수 선언\r\n    // const navigate = useNavigate();\r\n\r\n    //화면 리턴\r\n    return (\r\n        <BasicLayout>\r\n            <div className=\"text-3xl\">HobbyPage</div>\r\n            <Outlet />\r\n        </BasicLayout>\r\n    );\r\n}\r\n\r\nexport default HobbyPage;"],"names":["prefix","concat","getMenu","async","axios","get","data","getMenuOne","id","getSubMenus","getSearch","console","log","keyword","Design_Hamburger","_ref","ShowHamburgerMenu","_jsx","children","_jsxs","motion","svg","className","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","line","x1","y1","x2","y2","animate","rotate","y","transition","duration","scale","Design_DropMenu","DropShowHamburgerMenu","initial","initMenuDTO","dtoList","maxSubMenuCount","HamburgerComponent","menuDTO","setMenuDTO","useState","useEffect","then","setShowHamburgerMenu","showHamburgerMenu","setDropShowHamburgerMenu","handleResize","window","innerWidth","addEventListener","removeEventListener","map","menu","onClick","showDropHamburgerMenu","index","name","sub_menus","sub_menu","Link","to","link","e","stopPropagation","HeaderComponent","ShowDropMenu","setShowDropMenu","showDropMenu","hideDropMenu","alt","src","logo","onMouseOver","onMouseOut","elements","i","push","location","useLocation","ip","actionDate","Date","toISOString","post","action","postUserLogRegist","logUserVisit","pathname","_Fragment","HobbyPage","BasicLayout","Outlet"],"sourceRoot":""}